# This viminfo file was generated by Vim 8.2.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~Msle0~/\<Base\>

# Command Line History (newest to oldest):
:wq
|2,0,1701396190,,"wq"
:q!
|2,0,1701395634,,"q!"
:WQ
|2,0,1701395181,,"WQ"
:q
|2,0,1701394734,,"q"
:qq!
|2,0,1701394731,,"qq!"
:set nu
|2,0,1701390075,,"set nu"
:.,.+1!
|2,0,1701388946,,".,.+1!"
:Q!
|2,0,1701372555,,"Q!"
:w
|2,0,1701372431,,"w"
:0,19d
|2,0,1701026411,,"0,19d"
:wq!
|2,0,1700506630,,"wq!"
:q1
|2,0,1700416079,,"q1"
:87:114d
|2,0,1700254613,,"87:114d"
:recover
|2,0,1700146686,,"recover"
:26,49d
|2,0,1697818579,,"26,49d"
:19,48d
|2,0,1697815660,,"19,48d"
:0,54d
|2,0,1697815499,,"0,54d"
:28,56d
|2,0,1697813611,,"28,56d"
:'<,'>recover news_api.py
|2,0,1697810477,,"'<,'>recover news_api.py"
:recover news_api.py
|2,0,1697810275,,"recover news_api.py"
:0, 
|2,0,1697733589,,"0, "
:earlier 10m
|2,0,1697730410,,"earlier 10m"
:42,71d
|2,0,1697645925,,"42,71d"
:48,67d
|2,0,1697587813,,"48,67d"
:w news.py
|2,0,1697209328,,"w news.py"
:e news.py
|2,0,1697208909,,"e news.py"
:!rm news.py
|2,0,1697208848,,"!rm news.py"
:w news_copy.py
|2,0,1697208621,,"w news_copy.py"
:Q
|2,0,1696958220,,"Q"

# Search String History (newest to oldest):
? \<Base\>
|2,1,1701388605,,"\\<Base\\>"
?/usern
|2,1,1701369758,47,"usern"
?/newsfeed
|2,1,1701297778,47,"newsfeed"
?/create_ta
|2,1,1701292312,47,"create_ta"
?/create
|2,1,1701292287,47,"create"
?/create_tab
|2,1,1701292277,47,"create_tab"
? \<engine\>
|2,1,1701290060,,"\\<engine\\>"
? \<db\>
|2,1,1701288284,,"\\<db\\>"
?/url
|2,1,1701285678,47,"url"
?/newdata
|2,1,1701277679,47,"newdata"
?/session
|2,1,1701276348,47,"session"
?/newsfe
|2,1,1701194525,47,"newsfe"
? \<news_item\>
|2,1,1701030843,,"\\<news_item\\>"
? \<if\>
|2,1,1701030356,,"\\<if\\>"
?/clear
|2,1,1700783963,47,"clear"
?/user
|2,1,1700783550,47,"user"
? \<app\>
|2,1,1700761564,,"\\<app\\>"
? \<from\>
|2,1,1700505604,,"\\<from\\>"
? \<return\>
|2,1,1700147783,,"\\<return\\>"
? \<count\>
|2,1,1697733399,,"\\<count\\>"
? \<top_stories_url\>
|2,1,1697730352,,"\\<top_stories_url\\>"
? \<request_news\>
|2,1,1697642611,,"\\<request_news\\>"
? \<url\>
|2,1,1697587736,,"\\<url\\>"
? \<parsed_data\>
|2,1,1697214725,,"\\<parsed_data\\>"
? \<print\>
|2,1,1696973940,,"\\<print\\>"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
"1	LINE	0
	def get_newsfeed():
	    """
	    Use the HackernewsAPI and get stories and sort them based off of the number of likes and dislikes
	    """
	    url = 'https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'
	    request_news = requests.get(url)
	    sub_ids = request_news.json()
	    submission_dicts = []
	
	    #pull the info from the database and store them
	    for sub_id in sub_ids[:20]:
	        url = f'https://hacker-news.firebaseio.com/v0/item/{sub_id}.json?print=pretty'
	        sub_request = requests.get(url)
	        response_dict = sub_request.json()
	
	        sub_dict = {
	                'title': response_dict['title'],
	                'urlink': response_dict.get('url', 0),
	                'id': response_dict.get('id', 0),
	        }
	
	        submission_dicts.append(sub_dict)
	
	    return render_template("news.html", session=session.get('user'), sub=submission_dicts, PAGE=0)
|3,0,1,1,24,0,1697818579,"def get_newsfeed():","    \"\"\"","    Use the HackernewsAPI and get stories and sort them based off of the number of likes and dislikes","    \"\"\"","    url = 'https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'","    request_news = requests.get(url)","    sub_ids = request_news.json()","    submission_dicts = []","","    #pull the info from the database and store them","    for sub_id in sub_ids[:20]:",>88
|<"        url = f'https://hacker-news.firebaseio.com/v0/item/{sub_id}.json?print=pretty'","        sub_request = requests.get(url)","        response_dict = sub_request.json()","","        sub_dict = {","                'title': response_dict['title'],","                'urlink': response_dict.get('url', 0),","                'id': response_dict.get('id', 0),","        }","","        submission_dicts.append(sub_dict)","",>102
|<"    return render_template(\"news.html\", session=session.get('user'), sub=submission_dicts, PAGE=0)"
"2	LINE	0
	def fetch_and_save_news_items():
	    # Start a session
	    session = Session()
	
	    # Create the 'News' table if it doesn't exist
	    Base.metadata.create_all(engine)
	
	    # Fetch the latest news IDs
	    url = 'https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'
	    request_news = requests.get(url)
	    sub_ids = request_news.json()
	
	    # For each ID, retrieve the relevant JSON data and save it to the database
	    for sub_id in sub_ids[:20]:
	        url = f'https://hacker-news.firebaseio.com/v0/item/{sub_id}.json'
	        sub_request = requests.get(url)
	        response_dict = sub_request.json()
	
	        # Create a new News object and add it to the session
	        new_news = News(
	            title=response_dict['title'],
	            urlink=response_dict.get('url', ''),
	            id=response_dict.get('id', 0),
	        )
	
	        session.add(new_news)
	
	    # Commit the changes and close the session
	    session.commit()
	    session.close()
|3,0,2,1,30,0,1697815660,"def fetch_and_save_news_items():","    # Start a session","    session = Session()","","    # Create the 'News' table if it doesn't exist","    Base.metadata.create_all(engine)","","    # Fetch the latest news IDs","    url = 'https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'","    request_news = requests.get(url)","    sub_ids = request_news.json()","",>80
|<"    # For each ID, retrieve the relevant JSON data and save it to the database","    for sub_id in sub_ids[:20]:","        url = f'https://hacker-news.firebaseio.com/v0/item/{sub_id}.json'","        sub_request = requests.get(url)","        response_dict = sub_request.json()","","        # Create a new News object and add it to the session","        new_news = News(","            title=response_dict['title'],","            urlink=response_dict.get('url', ''),",>44
|<"            id=response_dict.get('id', 0),","        )","","        session.add(new_news)","","    # Commit the changes and close the session","    session.commit()","    session.close()"
"3	LINE	0
	import requests
	from sqlalchemy import create_engine, Column, Integer, String, Table, MetaData
	from sqlalchemy.orm import sessionmaker
	from sqlalchemy.ext.declarative import declarative_base
	
	#import and configure SQLAlchemy
	engine = create_engine('sqlite:///hacker_news.db')
	Session = sessionmaker(bind=engine)
	
	
	class News():
	    __tablename__ = 'News'
	
	    id = Column(Integer, primary_key=True)
	    title = Column(String)
	    urlink = Column(String)
	
	def fetch_and_save_news_items():
	    # Start a session
	    session = Session()
	
	    # Get the News table from the metadata
	    metadata = MetaData()
	    news = Table('News', metadata, autoload_with=engine)
	
	    # Fetch the latest news IDs
	    url = 'https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'
	    request_news = requests.get(url)
	    sub_ids = request_news.json()
	
	    # For each ID, retrieve the relevant JSON data and save it to the database
	    for sub_id in sub_ids[:20]:
	        url = f'https://hacker-news.firebaseio.com/v0/item/{sub_id}.json'
	        sub_request = requests.get(url)
	        response_dict = sub_request.json()
	
	        # Create a new row for the News table
	        new_news = news.insert().values(
	            title=response_dict['title'],
	            urlink=response_dict.get('url', 0),
	            id=response_dict.get('id', 0),
	        )
	
	        # Execute the insert statement
	        session.execute(new_news)
	
	    # Commit the changes and close the session
	    session.commit()
	    session.close()
	
|3,0,3,1,50,0,1697815499,"import requests","from sqlalchemy import create_engine, Column, Integer, String, Table, MetaData","from sqlalchemy.orm import sessionmaker","from sqlalchemy.ext.declarative import declarative_base","","#import and configure SQLAlchemy","engine = create_engine('sqlite:///hacker_news.db')","Session = sessionmaker(bind=engine)","","","class News():","    __tablename__ = 'News'","","    id = Column(Integer, primary_key=True)",>28
|<"    title = Column(String)","    urlink = Column(String)","","def fetch_and_save_news_items():","    # Start a session","    session = Session()","","    # Get the News table from the metadata","    metadata = MetaData()","    news = Table('News', metadata, autoload_with=engine)","","    # Fetch the latest news IDs","    url = 'https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'","    request_news = requests.get(url)","    sub_ids = request_news.json()","",>80
|<"    # For each ID, retrieve the relevant JSON data and save it to the database","    for sub_id in sub_ids[:20]:","        url = f'https://hacker-news.firebaseio.com/v0/item/{sub_id}.json'","        sub_request = requests.get(url)","        response_dict = sub_request.json()","","        # Create a new row for the News table","        new_news = news.insert().values(","            title=response_dict['title'],","            urlink=response_dict.get('url', 0),",>44
|<"            id=response_dict.get('id', 0),","        )","","        # Execute the insert statement","        session.execute(new_news)","","    # Commit the changes and close the session","    session.commit()","    session.close()",""
"4	LINE	0
	@app.route('/newsfeed')
	def get_newsfeed():
	    """
	    Use the HackernewsAPI and get stories and sort them based off of the number of likes and dislikes
	    """
	    session = Session()
	    #delete any news in the database
	    url = 'https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'
	    request_news = requests.get(url)
	    sub_ids = request_news.json()
	    submission_dicts = []
	
	    #pull the info from the database and store them
	    for sub_id in sub_ids[:20]:
	        url = f'https://hacker-news.firebaseio.com/v0/item/{sub_id}.json'
	        sub_request = requests.get(url)
	        response_dict = sub_request.json()
	
	        #count = select_article_val("artVal", response_dict['title'])
	        sub_dict = {
	                'title': response_dict['title'],
	                'urlink': response_dict.get('url', 0),
	                'id': response_dict.get('id', 0),
	         #       'likes': count 
	        }
	    return render_template("news.html", sub=submission_dicts, PAGE=0)  
	    #return render_template("news.html", session=session.get('user'), sub=submission_dicts, PAGE=0)
	   # response = requests.get(url)
	   #  return response.text
|3,0,4,1,29,0,1697813611,"@app.route('/newsfeed')","def get_newsfeed():","    \"\"\"","    Use the HackernewsAPI and get stories and sort them based off of the number of likes and dislikes","    \"\"\"","    session = Session()","    #delete any news in the database","    url = 'https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty'","    request_news = requests.get(url)","    sub_ids = request_news.json()","    submission_dicts = []","",>53
|<"    #pull the info from the database and store them","    for sub_id in sub_ids[:20]:","        url = f'https://hacker-news.firebaseio.com/v0/item/{sub_id}.json'","        sub_request = requests.get(url)","        response_dict = sub_request.json()","","        #count = select_article_val(\"artVal\", response_dict['title'])","        sub_dict = {","                'title': response_dict['title'],","                'urlink': response_dict.get('url', 0),",>51
|<"                'id': response_dict.get('id', 0),","         #       'likes': count ","        }","    return render_template(\"news.html\", sub=submission_dicts, PAGE=0)  ","    #return render_template(\"news.html\", session=session.get('user'), sub=submission_dicts, PAGE=0)","   # response = requests.get(url)","   #  return response.text"
"5	LINE	0
	<!DOCTYPE html>
	<html>
	<head>
	    <title>News</title>
	</head>
	<body>
	    <h1>News Articles</h1>
	    <ul>
	        {% for article in sub %}
	            <li>
	                <h2><a href="{{ article.urlink }}">{{ article.title }}</a></h2>
	                <p>ID: {{ article.id }}</p>
	                <p>Likes: {{ article.likes }}</p>
	            </li>
	        {% endfor %}
	    </ul>
	    <p>Welcome, {{ session }}!</p>
	</body>
	</html>
|3,0,5,1,19,0,1697733593,"<!DOCTYPE html>","<html>","<head>","    <title>News</title>","</head>","<body>","    <h1>News Articles</h1>","    <ul>","        {% for article in sub %}","            <li>","                <h2><a href=\"{{ article.urlink }}\">{{ article.title }}</a></h2>","                <p>ID: {{ article.id }}</p>","                <p>Likes: {{ article.likes }}</p>","            </li>","        {% endfor %}","    </ul>",>36
|<"    <p>Welcome, {{ session }}!</p>","</body>","</html>"
"6	LINE	0
	@app.route("/home")
	def home():
	    """
	    Use the HackernewsAPI and get stories and sort them based off of the number of likes and dislikes
	    """
	    #delete any news in the database
	    url = 'https://hacker-news.firebaseio.com/v0/topstories.json'
	    request_news = requests.get(url)
	    sub_ids = request_news.json()
	    submission_dicts = []
	
	    #pull the info from the database and store them
	    for sub_id in sub_ids[:20]:
	        url = ('https://hacker-news.firebase.com/v0/item' + str(sub_id) + '.json')
	
	        sub_request = requests.get(url)
	        response = sub_request.json()
	
	        #store the number of likes in count
	        #count = select_article_val("artVal", response['title'])
	        sub_dict = {
	                'title': response['title'],
	                'urlink': response_dict.get('url', 0),
	                'id': response_dict.get('id', 0),
	                #'likes': count
	        }
	    
	    #    return render_template("news.html", session=session.get('user'), sub=submission_dicts, PAGE=0)
	    response = requests.get(url)
	    return response.text
|3,0,6,1,30,0,1697645925,"@app.route(\"/home\")","def home():","    \"\"\"","    Use the HackernewsAPI and get stories and sort them based off of the number of likes and dislikes","    \"\"\"","    #delete any news in the database","    url = 'https://hacker-news.firebaseio.com/v0/topstories.json'","    request_news = requests.get(url)","    sub_ids = request_news.json()","    submission_dicts = []","","    #pull the info from the database and store them",>33
|<"    for sub_id in sub_ids[:20]:","        url = ('https://hacker-news.firebase.com/v0/item' + str(sub_id) + '.json')","","        sub_request = requests.get(url)","        response = sub_request.json()","","        #store the number of likes in count","        #count = select_article_val(\"artVal\", response['title'])","        sub_dict = {","                'title': response['title'],","                'urlink': response_dict.get('url', 0),",>51
|<"                'id': response_dict.get('id', 0),","                #'likes': count","        }","    ","    #    return render_template(\"news.html\", session=session.get('user'), sub=submission_dicts, PAGE=0)","    response = requests.get(url)","    return response.text"
"7	LINE	0
	    url = 'https://hacker-news.firebaseio.com/v0/topstories.json'
	    request_news = requests.get(url)
	    sub_ids = request_news.json()
	    submission_dicts = []
	
	    #pull the info from the database and store them
	    for sub_id in sub_ids[:20]:
	        url = ('https://hacker-news.firebase.com/v0/item' + str(sub_id) + '.json')
	
	        sub_request = requests.get(url)
	        response = sub_request.json()
	
	        count = select_article_val("artVal", response['title'])
	        sub_dict = {
	                'title': response['title'],
	                'urlink': response_dict.get('url', 0),
	                'id': response_dict.get('id', 0),
	                'likes': count 
	        }
	        return render_template("news.html", session=session.get('user'), sub=submission_dicts, PAGE=0)
|3,0,7,1,20,0,1697587813,"    url = 'https://hacker-news.firebaseio.com/v0/topstories.json'","    request_news = requests.get(url)","    sub_ids = request_news.json()","    submission_dicts = []","","    #pull the info from the database and store them","    for sub_id in sub_ids[:20]:","        url = ('https://hacker-news.firebase.com/v0/item' + str(sub_id) + '.json')","","        sub_request = requests.get(url)","        response = sub_request.json()","",>67
|<"        count = select_article_val(\"artVal\", response['title'])","        sub_dict = {","                'title': response['title'],","                'urlink': response_dict.get('url', 0),","                'id': response_dict.get('id', 0),","                'likes': count ","        }","        return render_template(\"news.html\", session=session.get('user'), sub=submission_dicts, PAGE=0)"
""-	CHAR	0
	T" action="{{ url_for('delete_news', news_id=item.id) }}">
|3,1,36,0,1,0,1701027619,"T\" action=\"{{ url_for('delete_news', news_id=item.id) }}\">"

# File marks:
'0  67  0  ~/news/models.py
|4,48,67,0,1701396190,"~/news/models.py"
'1  1  4  ~/news/app.py
|4,49,1,4,1701396178,"~/news/app.py"
'2  156  63  ~/news/app.py
|4,50,156,63,1701396132,"~/news/app.py"
'3  156  63  ~/news/app.py
|4,51,156,63,1701396132,"~/news/app.py"
'4  166  42  ~/news/app.py
|4,52,166,42,1701395945,"~/news/app.py"
'5  167  42  ~/news/app.py
|4,53,167,42,1701395945,"~/news/app.py"
'6  166  42  ~/news/app.py
|4,54,166,42,1701395945,"~/news/app.py"
'7  167  42  ~/news/app.py
|4,55,167,42,1701395945,"~/news/app.py"
'8  167  247  ~/news/app.py
|4,56,167,247,1701395851,"~/news/app.py"
'9  172  1  ~/news/app.py
|4,57,172,1,1701395851,"~/news/app.py"

# Jumplist (newest first):
-'  67  0  ~/news/models.py
|4,39,67,0,1701396190,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701396187,"~/news/models.py"
-'  1  4  ~/news/app.py
|4,39,1,4,1701396178,"~/news/app.py"
-'  1  4  ~/news/app.py
|4,39,1,4,1701396178,"~/news/app.py"
-'  156  63  ~/news/app.py
|4,39,156,63,1701396139,"~/news/app.py"
-'  156  63  ~/news/app.py
|4,39,156,63,1701396139,"~/news/app.py"
-'  156  63  ~/news/app.py
|4,39,156,63,1701396132,"~/news/app.py"
-'  156  63  ~/news/app.py
|4,39,156,63,1701396132,"~/news/app.py"
-'  166  42  ~/news/app.py
|4,39,166,42,1701396122,"~/news/app.py"
-'  166  42  ~/news/app.py
|4,39,166,42,1701396122,"~/news/app.py"
-'  166  42  ~/news/app.py
|4,39,166,42,1701396122,"~/news/app.py"
-'  166  42  ~/news/app.py
|4,39,166,42,1701396122,"~/news/app.py"
-'  167  42  ~/news/app.py
|4,39,167,42,1701395945,"~/news/app.py"
-'  167  42  ~/news/app.py
|4,39,167,42,1701395945,"~/news/app.py"
-'  167  42  ~/news/app.py
|4,39,167,42,1701395945,"~/news/app.py"
-'  167  42  ~/news/app.py
|4,39,167,42,1701395945,"~/news/app.py"
-'  168  247  ~/news/app.py
|4,39,168,247,1701395926,"~/news/app.py"
-'  167  247  ~/news/app.py
|4,39,167,247,1701395926,"~/news/app.py"
-'  168  247  ~/news/app.py
|4,39,168,247,1701395926,"~/news/app.py"
-'  168  247  ~/news/app.py
|4,39,168,247,1701395926,"~/news/app.py"
-'  167  247  ~/news/app.py
|4,39,167,247,1701395926,"~/news/app.py"
-'  168  247  ~/news/app.py
|4,39,168,247,1701395926,"~/news/app.py"
-'  172  1  ~/news/app.py
|4,39,172,1,1701395851,"~/news/app.py"
-'  173  1  ~/news/app.py
|4,39,173,1,1701395851,"~/news/app.py"
-'  172  1  ~/news/app.py
|4,39,172,1,1701395851,"~/news/app.py"
-'  173  1  ~/news/app.py
|4,39,173,1,1701395851,"~/news/app.py"
-'  172  1  ~/news/app.py
|4,39,172,1,1701395851,"~/news/app.py"
-'  173  1  ~/news/app.py
|4,39,173,1,1701395851,"~/news/app.py"
-'  172  1  ~/news/app.py
|4,39,172,1,1701395851,"~/news/app.py"
-'  173  1  ~/news/app.py
|4,39,173,1,1701395851,"~/news/app.py"
-'  169  68  ~/news/app.py
|4,39,169,68,1701395827,"~/news/app.py"
-'  170  68  ~/news/app.py
|4,39,170,68,1701395827,"~/news/app.py"
-'  169  68  ~/news/app.py
|4,39,169,68,1701395827,"~/news/app.py"
-'  170  68  ~/news/app.py
|4,39,170,68,1701395827,"~/news/app.py"
-'  169  68  ~/news/app.py
|4,39,169,68,1701395827,"~/news/app.py"
-'  170  68  ~/news/app.py
|4,39,170,68,1701395827,"~/news/app.py"
-'  169  68  ~/news/app.py
|4,39,169,68,1701395827,"~/news/app.py"
-'  170  68  ~/news/app.py
|4,39,170,68,1701395827,"~/news/app.py"
-'  170  68  ~/news/app.py
|4,39,170,68,1701395634,"~/news/app.py"
-'  170  68  ~/news/app.py
|4,39,170,68,1701395634,"~/news/app.py"
-'  171  28  ~/news/app.py
|4,39,171,28,1701395576,"~/news/app.py"
-'  171  28  ~/news/app.py
|4,39,171,28,1701395576,"~/news/app.py"
-'  172  28  ~/news/app.py
|4,39,172,28,1701395576,"~/news/app.py"
-'  172  28  ~/news/app.py
|4,39,172,28,1701395576,"~/news/app.py"
-'  171  28  ~/news/app.py
|4,39,171,28,1701395576,"~/news/app.py"
-'  171  28  ~/news/app.py
|4,39,171,28,1701395576,"~/news/app.py"
-'  172  28  ~/news/app.py
|4,39,172,28,1701395576,"~/news/app.py"
-'  172  28  ~/news/app.py
|4,39,172,28,1701395576,"~/news/app.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  33  0  ~/news/models.py
|4,39,33,0,1701395574,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"
-'  12  0  ~/news/models.py
|4,39,12,0,1701395521,"~/news/models.py"

# History of marks within files (newest to oldest):

> ~/news/models.py
	*	1701396189	0
	"	67	0
	^	33	24
	.	33	23
	+	5	210
	+	43	81
	+	1	39
	+	5	0
	+	1	58
	+	1	39
	+	1	55
	+	5	0
	+	1	39
	+	5	16
	+	5	44
	+	5	0
	+	5	45
	+	5	16
	+	5	17
	+	5	0
	+	43	81
	+	5	0
	+	43	76
	+	42	33
	+	7	131
	+	5	0
	+	7	1
	+	7	22
	+	7	49
	+	7	50
	+	7	100
	+	5	0
	+	6	32
	+	5	0
	+	6	0
	+	7	0
	+	12	24
	+	43	34
	+	44	0
	+	57	26
	+	45	0
	+	46	0
	+	9	0
	+	28	108
	+	53	20
	+	53	36
	+	49	65
	+	53	43
	+	49	0
	+	57	0
	+	52	26
	+	48	32
	+	7	82
	+	7	83
	+	7	56
	+	7	22
	+	7	0
	+	7	23
	+	7	0
	+	30	29
	+	33	4
	+	34	4
	+	33	4
	+	1	3
	+	3	2
	+	17	25
	+	20	6
	+	39	10
	+	56	6
	+	64	10
	+	61	27
	+	65	22
	+	51	28
	+	33	23

> ~/news/app.py
	*	1701396175	0
	"	1	4
	^	156	64
	.	157	0
	+	42	0
	+	80	27
	+	42	53
	+	42	63
	+	42	96
	+	42	143
	+	42	176
	+	42	263
	+	42	299
	+	42	54
	+	42	329
	+	17	34
	+	42	78
	+	17	0
	+	18	0
	+	42	0
	+	17	0
	+	18	0
	+	56	0
	+	55	30
	+	45	22
	+	80	4
	+	53	103
	+	80	4
	+	53	114
	+	52	59
	+	52	29
	+	80	4
	+	52	32
	+	53	0
	+	52	30
	+	46	0
	+	53	125
	+	53	89
	+	53	113
	+	53	47
	+	53	74
	+	80	0
	+	100	40
	+	112	60
	+	1	28
	+	43	31
	+	48	33
	+	59	27
	+	65	15
	+	66	30
	+	85	13
	+	86	28
	+	102	29
	+	116	30
	+	140	8
	+	118	44
	+	137	44
	+	164	0
	+	51	0
	+	50	8
	+	51	22
	+	80	0
	+	25	0
	+	251	94
	+	252	0
	+	250	53
	+	251	0
	+	150	49
	+	150	132
	+	150	60
	+	151	0
	+	150	0
	+	114	0
	+	115	0
	+	140	8
	+	53	47
	+	54	0
	+	55	32
	+	192	0
	+	192	163
	+	192	71
	+	5	39
	+	192	0
	+	148	37
	+	144	25
	+	146	89
	+	167	127
	+	16	33
	+	122	47
	+	123	61
	+	125	25
	+	127	90
	+	126	30
	+	127	64
	+	129	40
	+	167	97
	+	167	254
	+	149	31
	+	166	71
	+	167	98
	+	167	247
	+	168	0
	+	167	0
	+	157	0

> ~/news/templates/admin_news.html
	*	1701394665	0
	"	36	6
	^	37	7
	.	37	6
	+	42	6
	+	35	48
	+	34	76
	+	35	18
	+	34	58
	+	35	91
	+	35	44
	+	35	34
	+	35	38
	+	37	6

> ~/news/update_db.py
	*	1701390562	0
	"	79	4
	^	71	13
	.	72	0
	+	35	11
	+	36	11
	+	37	11
	+	38	11
	+	13	40
	+	33	0
	+	32	39
	+	38	10
	+	1	23
	+	52	66
	+	62	30
	+	62	103
	+	72	12
	+	62	12
	+	38	8
	+	33	28
	+	78	989
	+	78	31
	+	78	842
	+	78	313
	+	78	207
	+	78	236
	+	78	139
	+	78	768
	+	78	31
	+	79	0
	+	33	25
	+	75	0
	+	62	30
	+	33	28
	+	1	7
	+	17	23
	+	17	0
	+	17	23
	+	45	8
	+	22	23
	+	30	0
	+	24	32
	+	25	18
	+	17	50
	+	17	0
	+	18	0
	+	44	29
	+	5	26
	+	1	0
	+	15	0
	+	14	0
	+	13	0
	+	15	0
	+	14	0
	+	13	0
	+	15	0
	+	14	0
	+	45	60
	+	83	1384
	+	83	930
	+	83	970
	+	83	1005
	+	83	1050
	+	83	1101
	+	83	1144
	+	83	1185
	+	83	1224
	+	83	1260
	+	83	1303
	+	83	1342
	+	83	330
	+	83	0
	+	13	30
	+	83	374
	+	83	30
	+	83	0
	+	47	4
	+	45	53
	+	46	7
	+	15	0
	+	5	45
	+	1	0
	+	83	329
	+	83	0
	+	1	0
	+	5	0
	+	30	0
	+	1	3
	+	3	2
	+	21	6
	+	29	6
	+	86	0
	+	78	31
	+	79	0
	+	27	19
	+	10	32
	+	11	0
	+	27	4
	+	39	0
	+	40	0
	+	30	7
	+	40	8
	+	71	13
	+	72	0

> ~/news/test_app.py
	*	1701390448	0
	"	41	78
	^	41	79
	.	42	0
	+	41	347
	+	58	19
	+	3	59
	+	34	49
	+	28	3
	+	32	7
	+	33	7
	+	34	7
	+	31	10
	+	30	27
	+	28	0
	+	41	372
	+	41	530
	+	41	79
	+	41	82
	+	41	174
	+	41	216
	+	41	272
	+	41	332
	+	41	399
	+	41	465
	+	41	166
	+	41	155
	+	41	644
	+	41	162
	+	41	151
	+	41	120
	+	41	131
	+	41	163
	+	41	174
	+	41	226
	+	41	283
	+	41	348
	+	41	421
	+	41	488
	+	41	578
	+	41	810
	+	4	7
	+	41	223
	+	41	277
	+	41	343
	+	41	488
	+	41	571
	+	42	0

> ~/news/templates/news.html
	*	1701389282	0
	"	56	40
	^	56	41
	.	56	41
	+	60	6
	+	39	96
	+	39	199
	+	45	6
	+	39	71
	+	52	45
	+	56	45
	+	52	41
	+	56	41

> ~/news/apppy
	*	1701379722	0
	"	1	0

> ~/app.py
	*	1701379313	0
	"	1	0

> ~/news/templates/profile.html
	*	1701375233	0
	"	10	40
	^	10	41
	.	11	0
	+	12	6
	+	10	21
	+	9	25
	+	10	0
	+	11	0

> ~/news/templates/home.html
	*	1701372573	0
	"	18	57
	^	18	58
	.	18	58
	+	1	21
	+	1	30
	+	1	15
	+	1	201
	+	1	181
	+	1	386
	+	20	6
	+	1	0
	+	2	0
	+	15	9
	+	19	5
	+	17	28
	+	18	28
	+	17	33
	+	19	0
	+	18	57
	+	19	0
	+	18	58

> ~/news/app.p
	*	1701366858	0
	"	1	0

> ~/news/update_db.p
	*	1701286998	0
	"	1	0

> /tmp/crontab.iHQumd/crontab
	*	1701277142	0
	"	25	0

> ~/profile.html
	*	1701194270	0
	"	1	0

> ~/news/app.pu
	*	1701023508	0
	"	1	0

> ~/news/templates/admin_dashboard.html
	*	1700843433	0
	"	14	0
	^	14	0
	.	13	12
	+	13	12

> ~/news/templates/app.py
	*	1700783919	0
	"	1	0

> ~/news/templates/newsfeed.html
	*	1700767675	0
	"	42	0
	^	42	0
	.	41	7
	+	41	7

> ~/news/.env
	*	1700765421	0
	"	6	18
	^	6	19
	.	6	18
	+	1	48
	+	1	66
	+	1	184
	+	1	245
	+	1	240
	+	1	48
	+	1	226
	+	1	17
	+	6	18

> ~/news/requirements.txt
	*	1700763120	0
	"	4	15
	^	4	16
	.	4	15
	+	4	15

> ~/news/auth0_config.py
	*	1700761580	0
	"	4	62
	^	4	62
	.	4	61
	+	4	52
	+	2	50
	+	1	48
	+	3	86
	+	4	61

> ~/news/templates/home2.html
	*	1700579472	0
	"	1	0

> ~/news/app_copy.py
	*	1700521650	0
	"	44	0

> ~/news/templates/newsfeed.htmml
	*	1700416076	0
	"	1	0

> ~/news/templates/newsfeed.tml
	*	1700255148	0
	"	1	0

> ~/news/app.pt
	*	1700065392	0
	"	1	0

> ~/news/env/venv/bin/gunicorn
	*	1700065282	0
	"	1	17
	^	1	18
	.	1	17
	+	1	17

> /tmp/crontab.wM4sVu/crontab
	*	1698156853	0
	"	1	0

> /tmp/crontab.wP0w9C/crontab
	*	1698156569	0
	"	25	0
	^	25	1
	.	25	2
	+	25	2

> /tmp/crontab.Bn86xF/crontab
	*	1698093808	0
	"	1	0

> /tmp/crontab.mdvSyc/crontab
	*	1698093796	0
	"	25	33
	^	25	34
	.	25	17
	+	25	17

> ~/news/hacker_news.db
	*	1698087107	0
	"	1	0

> ~/news/update_db.pt
	*	1698077630	0
	"	1	0

> /tmp/crontab.wj4wDX/crontab
	*	1698021792	0
	"	1	0

> /tmp/crontab.XDU6WU/crontab
	*	1698021634	0
	"	25	24
	^	25	25
	.	25	24
	+	25	24

> ~/config.py
	*	1698006478	0
	"	4	0
	^	3	87
	.	3	86
	+	3	42
	+	1	49
	+	2	50
	+	3	86

> /tmp/crontab.91IB6o/crontab
	*	1698005587	0
	"	1	0

> /tmp/crontab.tLS7r3/crontab
	*	1698005579	0
	"	25	0

> /tmp/crontab.ipBmKX/crontab
	*	1698005541	0
	"	15	0

> ~/news/instance/hacker_news.db
	*	1698004475	0
	"	1	0

> ~/news/news_db.db
	*	1697996822	0
	"	1	0

> /tmp/crontab.sVAHfC/crontab
	*	1697819012	0
	"	25	27
	^	25	28
	.	25	27
	+	25	27

> ~/crontab
	*	1697818889	0
	"	1	0

> ~/news/news.html
	*	1697816188	0
	"	1	0
	^	31	7
	.	32	0
	+	1	15
	+	31	7
	+	32	0

> ~/news/update_db.[y
	*	1697814207	0
	"	1	0

> ~/news/forms.py
	*	1697813130	0
	"	3	0
	^	3	0
	.	3	0
	+	3	0

> ~/news/news_api.py
	*	1697812498	0
	"	99	0
	^	48	18
	.	48	17
	+	39	36
	+	68	4
	+	70	26
	+	66	78
	+	71	0
	+	67	4
	+	39	8
	+	21	0
	+	22	0
	+	24	0
	+	25	1
	+	124	0
	+	130	0
	+	128	49
	+	48	17

> ~/news/news.py
	*	1697810796	0
	"	16	48
	^	16	49
	.	16	48
	+	15	64
	+	9	47
	+	9	24
	+	15	26
	+	16	36
	+	11	20
	+	12	12
	+	13	30
	+	6	12
	+	7	16
	+	8	8
	+	16	48

> ~/news_api.py
	*	1697808679	0
	"	1	0

> ~/news/news_api.oy
	*	1697748097	0
	"	1	0

> ~/news/news._api.py
	*	1697747780	0
	"	1	0

> ~/news/templates/news_api.py
	*	1697744391	0
	"	1	0

> ~/news/home.html
	*	1697743392	0
	"	3	11
	^	3	12
	.	3	11
	+	4	7
	+	5	0
	+	3	11

> ~/news/news_api_working.py
	*	1697733604	0
	"	68	3
	^	68	4
	.	70	2
	+	60	8
	+	65	9
	+	68	2
	+	70	2
	+	69	3
	+	70	2

> ~/news/news2.py
	*	1697733484	0
	"	61	8
	^	60	44
	.	60	43
	+	45	4
	+	80	3
	+	45	42
	+	99	32
	+	100	23
	+	45	4
	+	80	0
	+	82	6
	+	97	10
	+	99	0
	+	97	4
	+	98	4
	+	83	0
	+	45	11
	+	45	0
	+	45	8
	+	45	42
	+	45	16
	+	45	0
	+	139	308
	+	139	328
	+	78	2
	+	101	2
	+	139	321
	+	141	49
	+	45	19
	+	76	32
	+	58	28
	+	53	40
	+	51	88
	+	51	0
	+	51	64
	+	45	17
	+	41	19
	+	42	16
	+	39	0
	+	42	16
	+	140	0
	+	142	49
	+	53	57
	+	68	103
	+	69	0
	+	54	0
	+	55	82
	+	58	20
	+	62	37
	+	60	43

> ~/news/new2.py
	*	1697645387	0
	"	1	0

> ~/news.py
	*	1697587828	0
	"	48	15
	^	48	16
	.	48	15
	+	26	547
	+	26	460
	+	26	488
	+	34	0
	+	43	0
	+	28	27
	+	29	27
	+	8	45
	+	25	42
	+	19	0
	+	25	57
	+	18	24
	+	4	0
	+	7	8
	+	25	42
	+	25	41
	+	66	4
	+	55	23
	+	60	23
	+	61	0
	+	50	0
	+	51	0
	+	25	0
	+	24	18
	+	25	0
	+	21	14
	+	25	0
	+	26	0
	+	64	4
	+	65	4
	+	64	4
	+	22	42
	+	23	23
	+	57	22
	+	1	40
	+	57	17
	+	23	41
	+	22	0
	+	4	0
	+	5	13
	+	85	5
	+	66	5
	+	2	22
	+	68	37
	+	69	0
	+	1	1
	+	95	4
	+	14	0
	+	93	15
	+	97	226
	+	97	151
	+	97	191
	+	97	98
	+	97	44
	+	97	266
	+	107	25
	+	97	450
	+	107	25
	+	97	434
	+	97	299
	+	97	317
	+	97	421
	+	97	393
	+	97	317
	+	97	299
	+	97	453
	+	107	0
	+	97	439
	+	106	61
	+	97	19
	+	99	48
	+	47	11
	+	44	0
	+	43	7
	+	46	6
	+	45	100
	+	48	63
	+	48	31
	+	48	0
	+	48	15
	+	48	74
	+	48	0
	+	48	82
	+	48	63
	+	48	20
	+	48	8
	+	48	41
	+	48	24
	+	48	30
	+	48	100
	+	48	40
	+	36	0
	+	42	0
	+	37	20
	+	39	16
	+	38	11
	+	43	0
	+	108	48
	+	48	15
	e	2	21

> ~/new.py
	*	1697585810	0
	"	1	0

> ~/news2.py
	*	1697585763	0
	"	34	0

> ~/new2.py
	*	1697585534	0
	"	1	0

> ~/news2.p
	*	1697585518	0
	"	1	0

> ~/news.html
	*	1697558049	0
	"	3	38
	^	3	39
	.	3	38
	+	1	15
	+	5	0
	+	3	38

> /tmp/crontab.u1vhpT/crontab
	*	1697221173	0
	"	25	0

> /tmp/crontab.fPgTrI/crontab
	*	1697219285	0
	"	25	3
	^	25	4
	.	25	2
	+	25	2

> /tmp/crontab.EG6PoP/crontab
	*	1697213585	0
	"	25	0
	^	25	0
	.	24	0
	+	24	0

> /tmp/crontab.AZpoec/crontab
	*	1697212651	0
	"	24	38
	^	24	39
	.	24	38
	+	24	38

> /tmp/crontab.sL1LcC/crontab
	*	1697212520	0
	"	1	0

> ~/wsgi.py
	*	1697210604	0
	"	4	11
	^	4	12
	.	4	12
	+	4	13
	+	1	9
	+	4	12

> ~/wsi.py
	*	1697210538	0
	"	1	0

> ~/news_copy.py
	*	1697209328	0
	"	95	3
	^	95	4
	.	95	4
	+	95	4

> ~/news_copy.pr
	*	1697208927	0
	"	1	0

> ~/.env
	*	1697117443	0
	"	6	16
	^	6	17
	.	6	16
	+	6	14
	+	3	48
	+	4	84
	+	5	13
	+	4	85
	+	3	16
	+	6	16

> ~/requirements.txt
	*	1697110199	0
	"	6	15
	^	6	16
	.	6	15
	+	6	15

> ~/home.html
	*	1696958225	0
	"	1	0
	^	1	0
	.	1	0
	+	9	7
	+	3	6
	+	9	0
	+	3	7
	+	4	16
	+	6	13
	+	3	0
	+	5	0
	+	4	8
	+	9	0
	+	6	7
	+	7	19
	+	1	0

> ~/news/news.pu
	*	1696867215	0
	"	1	0
